import { test, expect, Page } from "@playwright/test";
import { populate } from "./scripts/populate-db";
import { clickOnEmptyReactSelect, loginWith } from "./utils";

test.beforeAll(async () => {
  await populate();
});

const addCustomField = async (page: Page, name: string, type: string, options: string[]) => {
  await page.getByLabel("Nom").fill(name);
  await clickOnEmptyReactSelect(page, "type", type);
  await page.locator(".options__input-container").click();
  for (const option of options) {
    await page.getByLabel("Choix").fill(option);
    await page.getByLabel("Choix").press("Enter");
  }
  await page.getByRole("button", { name: "Enregistrer" }).click();
  await page.getByText("Mise √† jour !").click();
};

test("test", async ({ page }) => {
  await loginWith(page, "admin1@example.org");

  await test.step("create fields", async () => {
    await page.getByRole("link", { name: "Organisation" }).click();

    await page.getByRole("button", { name: "Personnes suivies" }).click();
    /* personnes infos sociales */
    await page.getByRole("button", { name: "Ajouter un champ" }).nth(0).click();
    await addCustomField(page, "Contrat de travail", "Choix dans une liste", ["CDI merde je me suis tromp√©", "CDD", "Interim"]);
    /* personnes infos m√©dicales */
    await page.getByRole("button", { name: "Ajouter un champ" }).nth(1).click();
    await addCustomField(page, "Drogues √† fumer", "Choix multiple dans une liste", ["P√©tard merde je me suis tromp√©", "Crack", "Pipe √† crack"]);

    await page.getByRole("button", { name: "Dossier M√©dical üßë‚Äç‚öïÔ∏è" }).click();
    await page.getByRole("button", { name: "Ajouter un champ" }).click();
    await addCustomField(page, "Douleur", "Choix multiple dans une liste", ["Colonne vert√©brale merde je me suis tromp√©", "Bras", "Jambe"]);

    await page.getByRole("button", { name: "Consultations üßë‚Äç‚öïÔ∏è" }).click();
    await page.getByRole("button", { name: "Ajouter un type de consultations" }).click();
    await page.getByPlaceholder("Titre du groupe").fill("Infirmier");
    await page.getByRole("dialog", { name: "Ajouter un groupe" }).getByRole("button", { name: "Ajouter" }).click();
    await page.getByText("Type de consultation ajout√©").click();
    await page.getByRole("button", { name: "Ajouter un champ" }).first().click();
    await addCustomField(page, "Poils au nez", "Choix dans une liste", ["un peu", "Beaucoup", "Passionn√©ment"]);

    await page.getByRole("button", { name: "Ajouter un champ" }).nth(1).click();
    await addCustomField(page, "Pansements", "Choix multiple dans une liste", ["Gros", "Tr√®s gros", "Tr√®s tr√®s gros"]);

    await page.getByRole("button", { name: "Territoires" }).click();
    await page.getByRole("button", { name: "Ajouter un champ" }).click();
    await addCustomField(page, "Policiers", "Choix dans une liste", ["beaucoup", "Tr√®s beaucoup", "Tr√®s tr√®s beaucoup"]);
  });

  await test.step("create person", async () => {
    await page.getByRole("link", { name: "Personnes suivies" }).click();
    await expect(page).toHaveURL("http://localhost:8090/person");

    await page.getByRole("button", { name: "Cr√©er une nouvelle personne" }).click();
    await page.getByLabel("Nom").fill("personne1");
    await page.getByRole("button", { name: "Sauvegarder" }).click();
    await page.getByText("Cr√©ation r√©ussie !").click();
    await page.getByRole("button", { name: "Modifier" }).click();

    await page.getByText("+").first().click();
    await clickOnEmptyReactSelect(page, "person-custom-select-contrat-de-travail", "CDI merde je me suis tromp√©");

    await page.getByText("+").click();
    await clickOnEmptyReactSelect(page, "person-custom-select-drogues-√†-fumer", "P√©tard merde je me suis tromp√©");
    await clickOnEmptyReactSelect(page, "person-custom-select-drogues-√†-fumer", "Crack");

    await page.getByRole("button", { name: "Enregistrer" }).click();
    await page.getByText("Mis √† jour !").click();

    await expect(page.getByText("CDI merde je me suis tromp√©")).toBeVisible();
    await expect(page.getByText("P√©tard merde je me suis tromp√©")).toBeVisible();
    await expect(page.getByText("Crack")).toBeVisible();

    await page.getByRole("button", { name: "Sortie de file active" }).click();
    await clickOnEmptyReactSelect(page, "person-select-outOfActiveListReasons", "Relai vers autre structure");
    await page.getByRole("button", { name: "Sauvegarder" }).click();
    await page.getByText("personne1 est hors de la file active").click();

    await page.getByRole("button", { name: "Dossier M√©dical" }).click();
    await clickOnEmptyReactSelect(page, "person-custom-select-douleur", "Colonne vert√©brale merde je me suis tromp√©");
    await clickOnEmptyReactSelect(page, "person-custom-select-douleur", "Jambe");
    await page.getByRole("button", { name: "Mettre √† jour" }).nth(1).click();
    await page.getByText("Mise √† jour effectu√©e !").click();

    await expect(page.getByText("Colonne vert√©brale merde je me suis tromp√©").nth(1)).toBeVisible();
    await expect(page.getByText("Jambe").nth(1)).toBeVisible();

    await page.getByRole("button", { name: "ü©∫ Ajouter une consultation" }).click();
    await clickOnEmptyReactSelect(page, "consultation-modal-type", "M√©dicale");
    await clickOnEmptyReactSelect(page, "person-custom-select-poils-au-nez", "un peu");
    await page.getByRole("button", { name: "Sauvegarder" }).click();

    await page.getByRole("button", { name: "ü©∫ Ajouter une consultation" }).click();
    await clickOnEmptyReactSelect(page, "consultation-modal-type", "Infirmier");
    await clickOnEmptyReactSelect(page, "person-custom-select-pansements", "Gros");
    await clickOnEmptyReactSelect(page, "person-custom-select-pansements", "Tr√®s gros");
    await clickOnEmptyReactSelect(page, "person-custom-select-pansements", "Tr√®s tr√®s gros");
    await page.getByRole("button", { name: "Sauvegarder" }).click();

    await page.getByText("Consultation M√©dicale").click();
    await expect(page.locator(".person-custom-select-poils-au-nez__single-value")).toHaveText("un peu");
    await page.getByRole("button", { name: "Fermer" }).click();
    await page.getByText("Consultation Infirmier").click();
    await expect(page.locator(".person-custom-select-pansements__multi-value__label").first()).toHaveText("Gros");
    await page.getByRole("button", { name: "Fermer" }).click();
  });

  await test.step("create observation", async () => {
    await page.getByRole("link", { name: "Territoires" }).click();
    await expect(page).toHaveURL("http://localhost:8090/territory");
    await page.getByRole("button", { name: "Cr√©er un nouveau territoire" }).click();
    await page.getByLabel("Nom").fill("territoire1");
    await page.getByRole("button", { name: "Sauvegarder" }).click();
    await page.getByText("Cr√©ation r√©ussie !").click();

    await page.getByRole("button", { name: "Nouvelle observation" }).click();
    await clickOnEmptyReactSelect(page, "observation-custom-select-policiers", "beaucoup");
    await page.getByRole("button", { name: "Sauvegarder" }).click();
    await page.getByText("Cr√©ation r√©ussie !").click();

    await page.getByRole("button", { name: "Nouvelle observation" }).click();
    await clickOnEmptyReactSelect(page, "observation-custom-select-policiers", "Tr√®s beaucoup");
    await page.getByRole("button", { name: "Sauvegarder" }).click();
    await page.getByText("Cr√©ation r√©ussie !").click();

    await page.getByRole("button", { name: "Nouvelle observation" }).click();
    await clickOnEmptyReactSelect(page, "observation-custom-select-policiers", "Tr√®s tr√®s beaucoup");
    await page.getByRole("button", { name: "Sauvegarder" }).click();
    await page.getByText("Cr√©ation r√©ussie !").click();

    await expect(page.getByText("Policiers: Tr√®s tr√®s beaucoup")).toBeVisible();
    await expect(page.getByText("Policiers: Tr√®s beaucoup")).toBeVisible();
    await expect(page.getByText("Policiers: beaucoup")).toBeVisible();
  });

  await test.step("change choices value", async () => {
    await page.getByRole("link", { name: "Organisation" }).click();

    await page.getByRole("button", { name: "Personnes suivies" }).click();

    await page.locator('[data-test-id="Motif\\(s\\) de sortie de file active"]').getByRole("button", { name: "Modifier le champ" }).click();
    await page.getByRole("button", { name: "Modifier le choix Relai vers autre structure" }).click();
    await page.getByPlaceholder("Relai vers autre structure").fill("Relai chez moi");
    page.once("dialog", (dialog) => {
      expect(dialog.message()).toBe(
        `Voulez-vous vraiment renommer "Relai vers autre structure" en "Relai chez moi", et mettre √† jour tous les √©l√©ments qui ont actuellement "Relai vers autre structure" en "Relai chez moi" ? Cette op√©ration est irr√©versible.`
      );
      dialog.accept();
    });
    await page.getByRole("dialog", { name: "√âditer le choix: Relai vers autre structure" }).getByRole("button", { name: "Enregistrer" }).click();
    await page.getByText("Choix mis √† jour !").click();

    await page.locator('[data-test-id="Contrat de travail"]').getByRole("button", { name: "Modifier le champ" }).click();
    await page.getByRole("button", { name: "Modifier le choix CDI merde je me suis tromp√©" }).click();
    await page.getByPlaceholder("CDI merde je me suis tromp√©").fill("CDI seulement");
    page.once("dialog", (dialog) => {
      expect(dialog.message()).toBe(
        `Voulez-vous vraiment renommer "CDI merde je me suis tromp√©" en "CDI seulement", et mettre √† jour tous les √©l√©ments qui ont actuellement "CDI merde je me suis tromp√©" en "CDI seulement" ? Cette op√©ration est irr√©versible.`
      );
      dialog.accept();
    });
    await page.getByRole("dialog", { name: "√âditer le choix: CDI merde je me suis tromp√©" }).getByRole("button", { name: "Enregistrer" }).click();
    await page.getByText("Choix mis √† jour !").click();

    await page.locator('[data-test-id="Drogues √† fumer"]').getByRole("button", { name: "Modifier le champ" }).click();
    await page.getByRole("button", { name: "Modifier le choix P√©tard merde je me suis tromp√©" }).click();
    await page.getByPlaceholder("P√©tard merde je me suis tromp√©").fill("P√©tard seulement");
    page.once("dialog", (dialog) => {
      expect(dialog.message()).toBe(
        `Voulez-vous vraiment renommer "P√©tard merde je me suis tromp√©" en "P√©tard seulement", et mettre √† jour tous les √©l√©ments qui ont actuellement "P√©tard merde je me suis tromp√©" en "P√©tard seulement" ? Cette op√©ration est irr√©versible.`
      );
      dialog.accept();
    });
    await page.getByRole("dialog", { name: "√âditer le choix: P√©tard merde je me suis tromp√©" }).getByRole("button", { name: "Enregistrer" }).click();
    await page.getByText("Choix mis √† jour !").click();

    await page.getByRole("button", { name: "Dossier M√©dical üßë‚Äç‚öïÔ∏è" }).click();
    await page.locator('[data-test-id="Douleur"]').getByRole("button", { name: "Modifier le champ" }).click();
    await page.getByRole("button", { name: "Modifier le choix Colonne vert√©brale merde je me suis tromp√©" }).click();
    await page.getByPlaceholder("Colonne vert√©brale merde je me suis tromp√©").fill("Colonne vert√©brale seulement");
    page.once("dialog", (dialog) => {
      expect(dialog.message()).toBe(
        `Voulez-vous vraiment renommer "Colonne vert√©brale merde je me suis tromp√©" en "Colonne vert√©brale seulement", et mettre √† jour tous les √©l√©ments qui ont actuellement "Colonne vert√©brale merde je me suis tromp√©" en "Colonne vert√©brale seulement" ? Cette op√©ration est irr√©versible.`
      );
      dialog.accept();
    });
    await page
      .getByRole("dialog", { name: "√âditer le choix: Colonne vert√©brale merde je me suis tromp√©" })
      .getByRole("button", { name: "Enregistrer" })
      .click();
    await page.getByText("Choix mis √† jour !").click();

    await page.getByRole("button", { name: "Consultations üßë‚Äç‚öïÔ∏è" }).click();
    await page.hover('[data-test-id="Poils au nez"]');
    await page
      .getByRole("button", {
        name: "Modifier le champ Poils au nez",
      })
      .click();
    await page.getByRole("button", { name: "Modifier le choix un peu" }).click();
    await page.getByPlaceholder("un peu").fill("Un peu");
    page.once("dialog", (dialog) => {
      expect(dialog.message()).toBe(
        `Voulez-vous vraiment renommer "un peu" en "Un peu", et mettre √† jour tous les √©l√©ments qui ont actuellement "un peu" en "Un peu" ? Cette op√©ration est irr√©versible.`
      );
      dialog.accept();
    });
    await page.getByRole("dialog", { name: "√âditer le choix: un peu" }).getByRole("button", { name: "Enregistrer" }).click();
    await page.getByText("Choix mis √† jour !").click();

    await page.hover('[data-test-id="Pansements"]');
    await page
      .getByRole("button", {
        name: "Modifier le champ Pansements",
      })
      .click();
    await page.getByRole("button", { name: "Modifier le choix Gros" }).click();
    await page.getByPlaceholder("Gros").fill("Petit");
    page.once("dialog", (dialog) => {
      expect(dialog.message()).toBe(
        `Voulez-vous vraiment renommer "Gros" en "Petit", et mettre √† jour tous les √©l√©ments qui ont actuellement "Gros" en "Petit" ? Cette op√©ration est irr√©versible.`
      );
      dialog.accept();
    });
    await page.getByRole("dialog", { name: "√âditer le choix: Gros" }).getByRole("button", { name: "Enregistrer" }).click();
    await page.getByText("Choix mis √† jour !").click();

    await page.getByRole("button", { name: "Territoires" }).click();

    await page.hover('[data-test-id="Policiers"]');
    await page
      .getByRole("button", {
        name: "Modifier le champ Policiers",
      })
      .click();
    await page.getByRole("button", { name: "Modifier le choix Tr√®s beaucoup" }).click();
    await page.getByPlaceholder("Tr√®s beaucoup").fill("Plein");
    page.once("dialog", (dialog) => {
      expect(dialog.message()).toBe(
        `Voulez-vous vraiment renommer "Tr√®s beaucoup" en "Plein", et mettre √† jour tous les √©l√©ments qui ont actuellement "Tr√®s beaucoup" en "Plein" ? Cette op√©ration est irr√©versible.`
      );
      dialog.accept();
    });
    await page.getByRole("dialog", { name: "√âditer le choix: Tr√®s beaucoup" }).getByRole("button", { name: "Enregistrer" }).click();
    await page.getByText("Choix mis √† jour !").click();
  });

  await test.step("expect changes to work", async () => {
    await page.getByRole("link", { name: "Personnes suivies" }).click();
    await expect(page).toHaveURL("http://localhost:8090/person");

    await page.getByText("personne1").click();

    await expect(page.getByText("P√©tard seulement")).toBeVisible();
    await expect(page.getByText("CDI seulement")).toBeVisible();
    await expect(page.getByText("Relai chez moi")).toBeVisible();

    await page.getByRole("button", { name: "Dossier M√©dical" }).click();
    await expect(page.getByText("Colonne vert√©brale seulement").nth(1)).toBeVisible();

    await page.getByText("Consultation M√©dicale").click();
    await expect(page.locator(".person-custom-select-poils-au-nez__single-value")).toHaveText("Un peu");

    await page.getByRole("button", { name: "Fermer" }).click();

    await page.getByText("Consultation Infirmier").click();
    await expect(page.locator(".person-custom-select-pansements__multi-value__label").first()).toHaveText("Petit");

    await page.getByRole("button", { name: "Fermer" }).click();

    await page.getByRole("link", { name: "Territoires" }).click();
    await page.getByRole("cell", { name: "territoire1" }).click();

    await expect(page.getByText("Policiers: Plein")).toBeVisible();
  });
});
