name: Production

on:
  push:
    tags:
      - v*

concurrency:
  group: preproduction
  cancel-in-progress: true

jobs:

  ##############################################################################
  ## BUILD WEBSITE
  ##############################################################################
  build-website:
    name: Build website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Node setup
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Yarn cache setup
        uses: c-hive/gha-yarn-cache@v2
        with:
          directory: website

      - name: Install dependencies
        working-directory: website
        run: yarn --frozen-lockfile

      - name: Build website
        working-directory: website
        run: yarn build-static

      - name: Archive website build
        uses: actions/upload-artifact@v2
        with:
          name: website-export
          path: website/out

  ##############################################################################
  ## BUILD AND REGISTER WEBSITE IMAGE
  ##############################################################################
  register-website:
    name: Register website
    runs-on: ubuntu-latest
    needs: build-website
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get project name
        run: |
          echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Download website build
        uses: actions/download-artifact@v2
        with:
          name: website-export
          path: website/out

      - name: Create image labels and tags
        id: docker_meta
        uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
        with:
          images: ghcr.io/socialgouv/${{ env.project }}/website
          labels: |
            org.opencontainers.image.title=website
            org.opencontainers.image.documentation=https://github.com/SocialGouv/${{ env.project }}/tree/${{ github.sha }}
          tags: |
            type=sha
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=sha-${{ github.sha }}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Registry authentication
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Image build and register
        uses: docker/build-push-action@v2
        with:
          context: .
          push: "true"
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
          file: website/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          tags: "${{ steps.docker_meta.outputs.tags }}"
          labels: "${{ steps.docker_meta.outputs.labels }}"

  ##############################################################################
  ## GENERATE PREPROD KUBERNETES MANIFESTS
  ##############################################################################
  manifests-preproduction:
    name: Generate preprod manifests
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Load review environment variables
        run: |
          cat ".github/preproduction.env" >> $GITHUB_ENV

      - name: Yarn cache setup
        uses: c-hive/gha-yarn-cache@v2
        with:
          directory: .k8s

      - name: Install kosko-charts dependencies
        run: yarn --cwd .k8s install --frozen-lockfile --prefer-offline

      - name: Generate preproduction manifests
        run: yarn --cwd .k8s --silent generate --env preprod > manifests-preprod.yml
        env:
          SOCIALGOUV_PREPRODUCTION: true
          SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

      - name: Generate preproduction namespace
        run: yarn --cwd .k8s --silent generate --env preprod _namespace > namespace-preprod.yml
        env:
          SOCIALGOUV_PREPRODUCTION: true
          SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

      - name: Archive preproduction manifests
        uses: actions/upload-artifact@v2
        with:
          name: manifests-preprod.yml
          path: manifests-preprod.yml

      - name: Archive preproduction namespace
        uses: actions/upload-artifact@v2
        with:
          name: namespace-preprod.yml
          path: namespace-preprod.yml

  ##############################################################################
  ## DEPLOY WEBSITE TO PREPRODUCTION
  ##############################################################################
  deploy-preproduction:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: [register-website, manifests-preproduction]
    environment:
      name: preproduction
      url: https://app-${{ env.namespace }}.${{ env.SOCIALGOUV_BASE_DOMAIN }}
    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get project name
        run: |
          cat ".github/preproduction.env" >> $GITHUB_ENV
          echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Download k8s manifests
        uses: actions/download-artifact@v2
        with:
          name: manifests-preprod.yml

      - name: Download k8s namespace
        uses: actions/download-artifact@v2
        with:
          name: namespace-preprod.yml

      - name: Install Kapp
        uses: vmware-tanzu/carvel-setup-action@v1
        with:
          only: kapp
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create kubernetes config
        run: |
          mkdir ~/.kube
          touch ~/.kube/config
          echo ${{ secrets.SOCIALGOUV_KUBE_CONFIG_DEV }} | base64 -d > ~/.kube/config

      - name: Create preproduction namespace
        run: kubectl create -f namespace-preprod.yml || true

      - name: Deploy application
        run: kapp --dangerous-override-ownership-of-existing-resources -y deploy -a ${{ env.project }} --namespace mano-preprod -f manifests-preprod.yml

  ##############################################################################
  ## GENERATE PROD KUBERNETES MANIFESTS
  ##############################################################################
  manifests-production:
    name: Generate prod manifests
    runs-on: ubuntu-latest
    needs: deploy-preproduction
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Load review environment variables
        run: |
          cat ".github/production.env" >> $GITHUB_ENV

      - name: Yarn cache setup
        uses: c-hive/gha-yarn-cache@v2
        with:
          directory: .k8s

      - name: Install kosko-charts dependencies
        run: yarn --cwd .k8s install --frozen-lockfile --prefer-offline

      - name: Generate production manifests
        run: yarn --cwd .k8s --silent generate --env prod > manifests-production.yml
        env:
          SOCIALGOUV_PRODUCTION: true
          SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

      - name: Archive production manifests
        uses: actions/upload-artifact@v2
        with:
          name: manifests-production.yml
          path: manifests-production.yml

  ##############################################################################
  ## DEPLOY WEBSITE TO PRODUCTION
  ##############################################################################
  deploy-production:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: manifests-production
    environment:
      name: production
      url: https://mano-app.${{ env.SOCIALGOUV_BASE_DOMAIN }}
    steps:
  
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get project name
      run: |
        cat ".github/production.env" >> $GITHUB_ENV
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Download production manifests
      uses: actions/download-artifact@v2
      with:
        name: manifests-production.yml

    - name: Install Kapp
      uses: vmware-tanzu/carvel-setup-action@v1
      with:
        only: kapp
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create kubernetes config
      run: |
        mkdir ~/.kube
        touch ~/.kube/config
        echo ${{ secrets.SOCIALGOUV_KUBE_CONFIG_PROD }} | base64 -d > ~/.kube/config

    - name: Deploy application
      run: |
        kapp --dangerous-override-ownership-of-existing-resources \
        -y deploy \
        -a ${{ env.project }} \
        --namespace mano \
        -f manifests-production.yml
