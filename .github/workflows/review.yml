name: Review

on:
  push:
    branches-ignore:
      - main
    tags-ignore:
      - v*

concurrency:
  cancel-in-progress: true
  group: review-${{ github.ref }}

jobs:
  ##############################################################################
  ## CREATE POSTGRES DATABASE
  ##############################################################################
  create-db:
    name: Create postgres database
    runs-on: ubuntu-latest
    steps:
      - uses: SocialGouv/actions/autodevops-create-db@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
          rancherId: ${{ secrets.RANCHER_PROJECT_ID }}

  ##############################################################################
  ## BUILD AND REGISTER DOCKER IMAGES
  ##############################################################################
  register-website:
    name: Register website
    runs-on: ubuntu-latest
    steps:
      - name: Get project name
        run: |
          echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          project: ${{ env.project }}
          token: ${{ secrets.GITHUB_TOKEN }}
          imageName: ${{ env.project }}/website
          dockerfile: website/Dockerfile
          dockercontext: .

  register-dashboard:
    name: Register dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Get project name
        run: |
          echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          project: ${{ env.project }}
          token: ${{ secrets.GITHUB_TOKEN }}
          imageName: ${{ env.project }}/dashboard
          dockerfile: dashboard/Dockerfile
          dockercontext: .

  register-api:
    name: Register api
    runs-on: ubuntu-latest
    steps:
      - name: Get project name
        run: |
          echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          project: ${{ env.project }}
          token: ${{ secrets.GITHUB_TOKEN }}
          imageName: ${{ env.project }}/api
          dockerfile: api/Dockerfile
          dockercontext: .

  ##############################################################################
  ## DEPLOY APPLICATION OVER KUBERNETES
  ##############################################################################
  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: [create-db, register-api, register-website, register-dashboard]
    steps:
      - name: Use autodevops manifests generation
        uses: SocialGouv/actions/autodevops-manifests@v1
        with:
          environment: "dev"
          rancherId: ${{ secrets.RANCHER_PROJECT_ID }}
          socialgouvBaseDomain: ${{ secrets.SOCIALGOUV_BASE_DOMAIN }}
          pgUserSecretPrefix: pg-user

      - name: Use autodevops deployment
        uses: SocialGouv/actions/autodevops-deploy@v1
        with:
          environment: "dev"
          token: ${{ secrets.GITHUB_TOKEN }}
          kubeconfig: ${{ secrets.KUBECONFIG }}
          rancherId: ${{ secrets.RANCHER_PROJECT_ID }}
