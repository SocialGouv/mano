name: Review

on:
  push:
    branches-ignore:
      - main
    tags-ignore:
      - v*

concurrency:
  cancel-in-progress: true
  group: review-${{ github.ref }}

jobs:

  ##############################################################################
  ## BUILD AND REGISTER WEBSITE IMAGE
  ##############################################################################
  register-website:
    name: Register website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get project name
        run: |
          echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          project: ${{ env.project }}
          token: ${{ secrets.GITHUB_TOKEN }}
          imageName: ${{ env.project }}/website
          dockerfile: website/Dockerfile
          dockercontext: .

  ##############################################################################
  ## BUILD AND REGISTER DASHBOARD IMAGE
  ##############################################################################
  register-dashboard:
    name: Register dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get project name
        run: |
          echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          project: ${{ env.project }}
          token: ${{ secrets.GITHUB_TOKEN }}
          imageName: ${{ env.project }}/dashboard
          dockerfile: dashboard/Dockerfile
          dockercontext: .

  ##############################################################################
  ## BUILD AND REGISTER API IMAGE
  ##############################################################################
  register-api:
    name: Register api
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get project name
        run: |
          echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          project: ${{ env.project }}
          token: ${{ secrets.GITHUB_TOKEN }}
          imageName: ${{ env.project }}/api
          dockerfile: api/Dockerfile
          dockercontext: .

  ##############################################################################
  ## GENERATE KUBERNETES MANIFESTS
  ##############################################################################
  manifests:
    name: Generate k8s manifests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Load review environment variables
        run: |
          cat ".github/review.env" >> $GITHUB_ENV

      - name: Yarn cache setup
        uses: c-hive/gha-yarn-cache@v2
        with:
          directory: .k8s

      - name: Install kosko-charts dependencies
        run: yarn --cwd .k8s install --frozen-lockfile --prefer-offline

      - name: Generate k8s manifests
        run: yarn --cwd .k8s --silent generate --env dev > manifests.yml
        env:
          SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

      - name: Generate k8s namespace
        run: yarn --cwd .k8s --silent generate --env dev _namespace > namespace.yml
        env:
          SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

      - name: Archive k8s manifests
        uses: actions/upload-artifact@v2
        with:
          name: manifests.yml
          path: manifests.yml

      - name: Archive k8s namespace
        uses: actions/upload-artifact@v2
        with:
          name: namespace.yml
          path: namespace.yml

  ##############################################################################
  ## DEPLOY ALL
  ##############################################################################
  deploy-all:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: [register-website, register-dashboard, register-api, manifests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download k8s manifests
        uses: actions/download-artifact@v2
        with:
          name: manifests.yml

      - name: Download k8s namespace
        uses: actions/download-artifact@v2
        with:
          name: namespace.yml

      - name: Get namespace name
        uses: mikefarah/yq@v4.24.5
        id: namespace
        with:
          cmd: yq eval '.metadata.name' namespace.yml

      - name: Install Kapp
        uses: vmware-tanzu/carvel-setup-action@v1
        with:
          only: kapp
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get project and namespace names
        run: |
          cat ".github/review.env" >> $GITHUB_ENV
          echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          echo "namespace=${NAMESPACE}" >> $GITHUB_ENV
        env:
          NAMESPACE: ${{ steps.namespace.outputs.result }}

      - name: Notify deployment start
        uses: bobheadxi/deployments@v0.6.2
        id: deployment
        with:
          step: start
          env: ${{ env.namespace }}
          token: ${{ secrets.GITHUB_TOKEN }}
          desc: "Deploying environment: ${{ env.namespace }}"

      - name: Create kubernetes config
        run: |
          mkdir ~/.kube
          touch ~/.kube/config
          echo ${{ secrets.SOCIALGOUV_KUBE_CONFIG_DEV }} | base64 -d > ~/.kube/config

      - name: Create k8s namespace and annotations
        run: kubectl create -f namespace.yml || true

      - name: Deploy application
        run: kubectl apply --namespace ${{ env.namespace }} -f manifests.yml

      - name: Notify deployment end
        uses: bobheadxi/deployments@v0.6.2
        if: always()
        with:
          step: finish
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://app-${{ env.namespace }}.${{ env.SOCIALGOUV_BASE_DOMAIN }}

      - uses: socialgouv/actions/k8s-manifests-debug@v1
        with:
          path: manifests.yml
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          RANCHER_PROJECT_ID: ${{ secrets.RANCHER_PROJECT_ID }} # optional
