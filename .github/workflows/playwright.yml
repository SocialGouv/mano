name: Playwright Tests
on:
  #  push:
  #    branches: [main, master]
  #  pull_request:
  #    branches: [main, master]
  push:
    branches-ignore:
      - ignoreme
    tags-ignore:
      - v*
jobs:
  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container: node:16

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: yarn
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Install dashboard dependencies and build
        run: |
          yarn --cwd ./dashboard
          yarn --cwd ./dashboard build
        env:
          REACT_APP_HOST: 127.0.0.1:8091
          REACT_APP_SCHEME: http
          REACT_APP_TEST: "true"

      - name: Install api dependencies
        run: yarn --cwd ./api

      - name: Install tests dependencies and initdb
        run: |
          yarn --cwd ./tests
          yarn --cwd ./tests test:init-db
        env:
          PGDATABASE: manotest
          PGBASEURL: postgres://postgres:postgres@postgres:5432

      - name: Start the server
        run: |
          yarn --cwd ./api start:test &
          sleep 10
        env:
          PGBASEURL: postgres://postgres:postgres@postgres:5432
          PGHOST: postgres
          PGDATABASE: manotest
          PGPORT: 5432
          PGUSER: postgres
          PGPASSWORD: postgres
          PORT: 8091

      # - name: Start the frontend
      #   run: |
      #     npx serve --single -l 8083 ../dashboard/build &
      #     sleep 10

      # - name: Run Playwright tests
      #   run: yarn playwright test
      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 30
